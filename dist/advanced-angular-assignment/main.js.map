{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/country/country.component.css","webpack:///./src/app/country/country.component.html","webpack:///./src/app/country/country.component.ts","webpack:///./src/app/currency/currency.component.css","webpack:///./src/app/currency/currency.component.html","webpack:///./src/app/currency/currency.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/language/language.component.css","webpack:///./src/app/language/language.component.html","webpack:///./src/app/language/language.component.ts","webpack:///./src/app/regions/regions.component.css","webpack:///./src/app/regions/regions.component.html","webpack:///./src/app/regions/regions.component.ts","webpack:///./src/app/restservice.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body {\\n    background-image: url('sky-earth-galaxy-universe.jpg');\\n    background-color: black;\\n    background-attachment: fixed;\\n}\\n#header {\\n    text-align: center;\\n    font-weight: bold;\\n    font-size: larger;\\n}\\n\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<head>\\n  <title>My Blog</title>\\n</head>\\n\\n<body>\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <nav class=\\\"navbar navbar-default\\\">\\n          <div class=\\\"container-fluid\\\">\\n            <div class=\\\"navbar-header\\\" >\\n              <a class=\\\"navbar-brand\\\" id=\\\"header\\\">My World</a>\\n            </div>\\n          </div>\\n        </nav>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n</body>\\n\\n</html>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { \n  constructor( )\n  {\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule,Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { RegionsComponent } from './regions/regions.component';\nimport { RestserviceService } from './restservice.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { CountryComponent } from './country/country.component';\nimport { HomeComponent } from './home/home.component';\nimport { CurrencyComponent } from './currency/currency.component';\nimport { LanguageComponent } from './language/language.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegionsComponent,\n    CountryComponent,\n    HomeComponent,\n    CurrencyComponent,\n    LanguageComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path:'home',component:HomeComponent},\n      {path:'region/:region',component:RegionsComponent},\n      {path:'country/:country',component:CountryComponent},\n      {path:'currency/:currency',component:CurrencyComponent},\n      {path:'language/:language',component:LanguageComponent},\n      {path:'',redirectTo:'home',pathMatch:'full'}\n    ])\n  ],\n  providers: [RestserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ country }}!\\n  </h1>\\n</div>\\n<a [routerLink]=\\\"['']\\\">Home</a>\\n  <ul *ngFor=\\\"let detail of country_details\\\">\\n    <ul>\\n      {{ detail.name }}\\n    </ul>\\n    <ul>\\n      {{ detail.capital }}\\n    </ul>\\n    <ul>\\n      {{ detail.region }}\\n    </ul>\\n    <ul>\\n      {{ detail.subregion }}\\n    </ul>\\n    <ul>\\n      {{ detail.population }}\\n    </ul>\\n    <ul>\\n      {{ detail.demonym }}\\n    </ul>\\n    <ul>\\n      {{ detail.area }}\\n    </ul>\\n    <ul>\\n      {{ detail.gini }}\\n    </ul>\\n    <ul>\\n        <img src=\\\"{{ detail.flag }} \\\" width=\\\"60\\\" height=\\\"60  \\\">\\n    </ul>\\n    <ul>\\n      <ul *ngFor=\\\"let currency of detail.currencies\\\">\\n          <ul>\\n              <a [routerLink]=\\\"['/currency' ,currency.code]\\\">{{ currency.name }}</a>\\n            </ul>\\n      </ul>\\n    </ul>\\n    <ul>\\n        <ul *ngFor=\\\"let language of detail.languages\\\">\\n            <ul>\\n                <a [routerLink]=\\\"['/language',language.iso639_2]\\\">{{ language.name }}</a>\\n              </ul>\\n        </ul>\\n      </ul>\\n  </ul>\\n  <a [routerLink]=\\\"['']\\\">Home</a>\\n  <router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { RestserviceService } from '../restservice.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css']\n})\nexport class CountryComponent implements OnInit {\npublic country;\npublic country_details;\n  constructor(private service : RestserviceService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.country = this.route.snapshot.paramMap.get('country');\n    console.log(this.country);\n    this.service.getbycountry(this.country).subscribe(\n      data => {\n        this.country_details = data;\n        console.log(\"this.country_details => \");\n        console.log(this.country_details);        \n      },\n      error => {\n          console.log(\"Error extracting json\");\n      }\n    )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n    <h1>\\n      List of Countries using currency {{ currency }}!\\n    </h1>\\n  </div>\\n  <a [routerLink]=\\\"['']\\\">Home</a>\\n    <ul *ngFor=\\\"let country of countries\\\">\\n      <div class=\\\"container\\\">\\n          <div>\\n                <img src=\\\"{{ country.flag }} \\\" width=\\\"60\\\" height=\\\"60  \\\">\\n                <a [routerLink]=\\\"['/country', country.name]\\\">{{ country.name }}</a>\\n          </div>\\n        </div>\\n    </ul>\\n    <a [routerLink]=\\\"['']\\\">Home</a>\\n    <router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RestserviceService } from '../restservice.service';\n\n@Component({\n  selector: 'app-currency',\n  templateUrl: './currency.component.html',\n  styleUrls: ['./currency.component.css']\n})\nexport class CurrencyComponent implements OnInit {\n  public currency;\n  public countries;\n  constructor(private route:ActivatedRoute,\n    private service:RestserviceService ) { }\n\n  ngOnInit() {\n    this.currency = this.route.snapshot.paramMap.get('currency');\n    console.log(this.currency);\n    this.service.getbycurrency(this.currency).subscribe(\n      data => {\n        this.countries = data;\n        console.log(\"this.countries => \");\n        console.log(this.countries);        \n      },\n      error => {\n          console.log(\"Error extracting json\");\n      }\n    )\n  }\n\n}\n","module.exports = \"body {\\n    background-image: url('sky-earth-galaxy-universe.jpg');\\n    background-color: black;\\n    background-attachment: fixed;\\n}\\n#list {\\n    font-weight: bolder;\\n    font: outline;\\n    font-size: xx-large; \\n}\"","module.exports = \"<body>\\n<h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n<ul *ngFor=\\\"let region of regions\\\" id=\\\"list\\\">\\n    <li><a [routerLink]=\\\"['/region', region]\\\">{{region}}</a></li>\\n</ul>\\n</body>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  title = 'My World';\n  regions = ['Africa', 'Americas', 'Asia', 'Europe', 'Oceania'];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n    <h1>\\n      List of Countries using language {{ language }}!\\n    </h1>\\n  </div>\\n  <a [routerLink]=\\\"['']\\\">Home</a>\\n    <ul *ngFor=\\\"let country of countries\\\">\\n      <div class=\\\"container\\\">\\n          <div>\\n                <img src=\\\"{{ country.flag }} \\\" width=\\\"60\\\" height=\\\"60  \\\">\\n                <a [routerLink]=\\\"['/country', country.name]\\\">{{ country.name }}</a>\\n          </div>\\n        </div>\\n    </ul>\\n    <a [routerLink]=\\\"['']\\\">Home</a>\\n    <router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RestserviceService } from '../restservice.service';\n\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.css']\n})\nexport class LanguageComponent implements OnInit {\n  public language;\n  public countries;\n  constructor(private route:ActivatedRoute,\n    private service:RestserviceService) { }\n\n  ngOnInit() {\n    this.language = this.route.snapshot.paramMap.get('language');\n    console.log(this.language);\n    this.service.getbylanguage(this.language).subscribe(\n      data => {\n        this.countries = data;\n        console.log(\"this.countries => \");\n        console.log(this.countries);        \n      },\n      error => {\n          console.log(\"Error extracting json\");\n      }\n    )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ region }}!\\n  </h1>\\n</div>\\n<a [routerLink]=\\\"['']\\\">Home</a>\\n  <ul *ngFor=\\\"let country of countries\\\">\\n    <div class=\\\"container\\\">\\n        <div>\\n              <img src=\\\"{{ country.flag }} \\\" width=\\\"60\\\" height=\\\"60  \\\">\\n              <a [routerLink]=\\\"['/country', country.name]\\\">{{ country.name }}</a>\\n        </div>\\n      </div>\\n  </ul>\\n  <a [routerLink]=\\\"['']\\\">Home</a>\\n  <router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { RestserviceService } from '../restservice.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-regions',\n  templateUrl: './regions.component.html',\n  styleUrls: ['./regions.component.css']\n})\nexport class RegionsComponent implements OnInit {\n  public region;\n  public countries;\n  constructor(private service : RestserviceService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.region = this.route.snapshot.paramMap.get('region');\n    console.log(this.region);\n    this.service.getbyregion(this.region).subscribe(\n      data => {\n        this.countries = data;\n        console.log(\"this.countries => \");\n        console.log(this.countries);        \n      },\n      error => {\n          console.log(\"Error extracting json\");\n      }\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestserviceService {\n  baseurl=\"https://restcountries.eu/rest/v2/\";\n\n  constructor(private http:HttpClient) \n  {  \n\n  }\n  getbyregion(region)  \n  {\n    let regionurl = this.baseurl + \"region/\" + region;\n    return this.http.get(regionurl);\n  }\n  getbycountry(country)  \n  {\n    let countrydetails = this.baseurl + \"name/\" + country;\n    return this.http.get(countrydetails);\n  }\n  getbycurrency(currency)  \n  {\n    let countrydetails = this.baseurl + \"currency/\" + currency;\n    return this.http.get(countrydetails);\n  }\n  getbylanguage(language)  \n  {\n    let countrydetails = this.baseurl + \"lang/\" + language;\n    return this.http.get(countrydetails);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}